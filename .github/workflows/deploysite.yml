name: Deploy Site

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions for the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and the latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repository so the workflow can access it
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Set up Python 3.9
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 3. Cache pip dependencies for faster subsequent runs
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }} # Adjust if you have a different dependency file
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install system dependencies required by your project
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libjpeg-dev zlib1g-dev

      # 5. Install Python packages and build the static site
      - name: Install dependencies and build website
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv sync
          # This generates the site into the 'public' directory
          uv run main.py site/

      # 6. Configure GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 7. Upload the generated site as a build artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the 'public' directory from the 'site' folder
          path: './site/public'

      # 8. Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
